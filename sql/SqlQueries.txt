CREATE TABLE department (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    name VARCHAR(255) NOT NULL
);
CREATE TABLE users (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    username VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    address TEXT
);
CREATE TABLE employees (
    PRIMARY KEY (id),
    children INT,
    leaveBalance INT,
    performanceRating NUMERIC,
    hireDate DATE,
    socialSecurityNumber VARCHAR(100),
    dateOfBirth DATE,
    salary DOUBLE PRECISION,
    department_id UUID REFERENCES department(id) ON DELETE CASCADE  ON UPDATE CASCADE
)INHERITS(users);

CREATE TABLE admins (
    PRIMARY KEY (id)
)INHERITS(users);

-- Table: recruiter (inherits from users)
CREATE TABLE recruiters (
   PRIMARY KEY (id)
)INHERITS(users);

CREATE TABLE job_offer (
    jobId UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    jobTitle VARCHAR(255) NOT NULL,
    jobDescription TEXT,
    status VARCHAR(50),
    postedDate DATE,
    validUntil DATE,
    recruiter_id UUID REFERENCES recruiters(id) ON DELETE CASCADE ON UPDATE CASCADE

);

CREATE TABLE candidature (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    status VARCHAR(50),
    job_id UUID REFERENCES job_offer(jobId) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE leaves (
    requestId UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    startDate DATE NOT NULL,
    endDate DATE,
    reason TEXT,
    status VARCHAR(50),
    employee_id UUID REFERENCES employees(id) ON DELETE CASCADE
);